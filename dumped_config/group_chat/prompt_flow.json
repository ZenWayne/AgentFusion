{
    "provider": "autogen_agentchat.teams.SelectorGroupChat",
    "component_type": "team",
    "version": 1,
    "component_version": 1,
    "description": "A group chat team that have participants takes turn to publish a message\n    to all, using a ChatCompletion model to select the next speaker after each message.",
    "label": "prompt_flow",
    "config": {
        "participants": [
            {
                "provider": "autogen_agentchat.agents.AssistantAgent",
                "component_type": "agent",
                "version": 1,
                "component_version": 1,
                "description": "An agent that provides assistance with tool use.",
                "label": "prompt_refiner",
                "config": {
                    "name": "prompt_refiner",
                    "model_client": {
                        "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
                        "component_type": "model",
                        "version": 1,
                        "component_version": 1,
                        "description": "Chat completion client for OpenAI hosted models.",
                        "label": "deepseek-chat_DeepSeek",
                        "config": {
                            "model": "deepseek-chat",
                            "api_key": "**********",
                            "model_info": {
                                "vision": false,
                                "function_calling": true,
                                "json_output": true,
                                "family": "r1"
                            },
                            "base_url": "https://api.deepseek.com/v1"
                        }
                    },
                    "tools": [],
                    "model_context": {
                        "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
                        "component_type": "chat_completion_context",
                        "version": 1,
                        "component_version": 1,
                        "description": "An unbounded chat completion context that keeps a view of the all the messages.",
                        "label": "UnboundedChatCompletionContext",
                        "config": {}
                    },
                    "description": "An agent that provides assistance with ability to use tools.",
                    "system_message": "你是一个Prompt优化Agent。你的核心使命是与用户协作，通过迭代改进，将一个初始的用户Prompt打磨成一个高质量的版本。这个高质量的Prompt能够清晰、准确地指导另一个执行Agent产出用户满意的最终结果。\n\n你的工作基于对用户反馈的接收和处理，你有两个主要的信息来源和处理模式：\n\n1.  **接收初始Prompt:**\n    * 你将接收用户提供的第一个Prompt。\n    * 仔细阅读并理解这个Prompt，准备好传递给执行Agent进行首次尝试。\n\n2.  **接收和响应关于执行结果的反馈:**\n    * 在执行Agent根据Prompt生成结果后，用户会评估结果并向你提供反馈。\n    * 这个反馈是针对 **执行结果本身** 的不满意之处。\n    * 当你接收到关于执行结果的反馈时，你需要深入分析：\n        * 用户具体不满意的地方是什么？\n        * 当前版本的Prompt可能有哪些缺陷（模糊、遗漏、冲突、约束不足等）导致了这样的结果？\n    * 基于你的分析，提出一个或多个具体的Prompt修改建议。\n    * **至关重要：** 在向用户展示你修改后的Prompt之前，你必须清晰地解释你为什么要做这些修改，以及这些修改是如何尝试解决用户之前指出的结果问题的。\n    * 将你提议的完整修改后的Prompt文本清晰地呈现给用户，准备进入Prompt文本确认环节。\n\n3.  **接收和响应关于Prompt文本本身的反馈:**\n    * 当你向用户展示了修改后的Prompt文本后，用户会审阅它，并可能直接对 **Prompt的措辞、结构、或内容本身** 提出修改意见。\n    * 这个反馈不是关于执行结果，而是关于Prompt文本是否清晰、准确、符合用户的表达意图。\n    * 当你接收到关于Prompt文本本身的反馈时，你的任务是根据用户的具体指示，直接对当前的Prompt文本进行调整。\n    * 调整后，再次向用户展示修改后的Prompt文本。\n    * 你将与用户进行多轮这样的交互：接收对Prompt文本的反馈 -> 修改Prompt文本 -> 展示修改后的文本。\n    * 这个过程将持续进行，直到用户明确告诉你他们对当前的Prompt文本感到完全满意并确认。\n\n4.  **用户最终确认Prompt:**\n    * 一旦用户明确表示对当前的Prompt文本满意并确认，你将这个版本标记为最终用户批准的版本。\n    * 这个被确认的版本将被用于后续的执行Agent运行。\n\n5.  **准备下一轮迭代:**\n    * 如果在执行Agent使用了用户最终确认的Prompt后，新的执行结果用户仍然不满意，用户会再次提供关于 **执行结果** 的反馈。\n    * 你将再次进入到分析结果反馈、提议Prompt修改、解释修改原因、与用户进行Prompt文本确认的多轮循环。\n\n**核心规则和约束:**\n\n* **你只处理Prompt文本:** 你的职责是理解、分析、修改和呈现Prompt文本。你绝不自己执行Prompt描述的任务。\n* **区分反馈来源:** 务必清晰地区分用户是对 **执行结果** 不满（需要你分析原因并提议修改）还是对 **Prompt文本本身** 不满（需要你直接根据用户指示调整文本）。\n* **解释你的提议:** 基于执行结果反馈提出的Prompt修改，必须解释原因。\n* **尊重用户对文本的控制:** 在Prompt文本确认环节，用户是最终决定者，你的任务是实现他们对文本的修改意图。\n* **等待确认:** 在用户明确确认当前Prompt文本最终版本之前，不要认为优化环节已完成。\n* **保持耐心和协作:** 这个过程可能是迭代的，保持积极和有益的态度。\n\n你的成功在于帮助用户将他们最初的想法，通过Prompt的不断优化，清晰无误地传达给执行Agent，最终得到他们想要的结果。",
                    "model_client_stream": false,
                    "reflect_on_tool_use": false,
                    "tool_call_summary_format": "{result}"
                }
            },
            {
                "provider": "autogen_agentchat.agents.AssistantAgent",
                "component_type": "agent",
                "version": 1,
                "component_version": 1,
                "description": "An agent that provides assistance with tool use.",
                "label": "executor",
                "config": {
                    "name": "executor",
                    "model_client": {
                        "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
                        "component_type": "model",
                        "version": 1,
                        "component_version": 1,
                        "description": "Chat completion client for OpenAI hosted models.",
                        "label": "deepseek-chat_DeepSeek",
                        "config": {
                            "model": "deepseek-chat",
                            "api_key": "**********",
                            "model_info": {
                                "vision": false,
                                "function_calling": true,
                                "json_output": true,
                                "family": "r1"
                            },
                            "base_url": "https://api.deepseek.com/v1"
                        }
                    },
                    "tools": [],
                    "model_context": {
                        "provider": "autogen_core.model_context.UnboundedChatCompletionContext",
                        "component_type": "chat_completion_context",
                        "version": 1,
                        "component_version": 1,
                        "description": "An unbounded chat completion context that keeps a view of the all the messages.",
                        "label": "UnboundedChatCompletionContext",
                        "config": {}
                    },
                    "description": "An agent that provides assistance with ability to use tools.",
                    "system_message": "你是一个提示词执行Agent。你的核心职责是接收一个由Prompt优化Agent与用户共同确认的、最终版本的Prompt，并严格按照该Prompt的内容执行任务，生成结果。\n\n**核心指令：**\n\n1.  **接收最终Prompt：** 你将从流程中接收一个已经过用户最终确认的Prompt文本。这是你执行任务的唯一指令来源。\n2.  **忠实执行：** 严格遵循Prompt中的所有指示、约束和要求来执行任务。你的目标是准确反映Prompt的意图，不应自行添加、省略或修改任务范围。\n3.  **生成结果：** 基于Prompt的指导，产出相应的执行结果。\n4.  **处理用户输入（如果适用）：**\n    *   **明确的输入请求：** 如果最终确认的Prompt明确指示在执行过程中需要用户提供额外信息（例如，具体数据、文件、选择等），你应清晰地向用户请求这些特定信息。\n    *   **隐含的输入需求：** 如果Prompt本身是一个通用的系统提示词（例如，一个翻译工具的提示词、一个代码解释器的提示词），并且其核心功能需要一个具体的用户输入（例如，需要翻译的文本、需要解释的代码段），而此用户输入未随最终Prompt一同提供，你需要：\n        *   首先，检查该系统提示词自身是否包含足够的信息来独立执行并产生有意义的输出。\n        *   如果不能，你需要主动引导用户提供必要的具体输入。例如，你可以说：\"我已经准备好执行您确认的提示词。请提供您希望我处理的[具体内容/问题/数据]。\"\n5.  **返回结果：** 将生成的执行结果清晰地返回，以便用户进行评估。\n\n你的目标是高效且准确地执行用户最终批准的Prompt，确保产出的结果直接对应Prompt的要求。",
                    "model_client_stream": false,
                    "reflect_on_tool_use": false,
                    "tool_call_summary_format": "{result}"
                }
            },
            {
                "provider": "autogen_agentchat.agents.UserProxyAgent",
                "component_type": "agent",
                "version": 1,
                "component_version": 1,
                "description": "An agent that can represent a human user through an input function.",
                "label": "UserProxyAgent",
                "config": {
                    "name": "user",
                    "description": "A human user"
                }
            }
        ],
        "model_client": {
            "provider": "autogen_ext.models.openai.OpenAIChatCompletionClient",
            "component_type": "model",
            "version": 1,
            "component_version": 1,
            "description": "Chat completion client for OpenAI hosted models.",
            "label": "deepseek-chat_DeepSeek",
            "config": {
                "model": "deepseek-chat",
                "api_key": "**********",
                "model_info": {
                    "vision": false,
                    "function_calling": true,
                    "json_output": true,
                    "family": "r1"
                },
                "base_url": "https://api.deepseek.com/v1"
            }
        },
        "termination_condition": {
            "provider": "autogen_agentchat.base.OrTerminationCondition",
            "component_type": "termination",
            "version": 1,
            "component_version": 1,
            "label": "OrTerminationCondition",
            "config": {
                "conditions": [
                    {
                        "provider": "autogen_agentchat.conditions.MaxMessageTermination",
                        "component_type": "termination",
                        "version": 1,
                        "component_version": 1,
                        "description": "Terminate the conversation after a maximum number of messages have been exchanged.",
                        "label": "MaxMessageTermination",
                        "config": {
                            "max_messages": 10,
                            "include_agent_event": false
                        }
                    },
                    {
                        "provider": "autogen_agentchat.conditions.TextMentionTermination",
                        "component_type": "termination",
                        "version": 1,
                        "component_version": 1,
                        "description": "Terminate the conversation if a specific text is mentioned.",
                        "label": "TextMentionTermination",
                        "config": {
                            "text": "TERMINATE"
                        }
                    }
                ]
            }
        },
        "selector_prompt": "你是一个流程协调者，负责指导一个基于用户反馈进行迭代式Prompt优化的多Agent协作流程。你的目标是严格依据已定义的工作流和当前的对话历史，选择下一个应该行动的 *单一* Agent。\n\n可用的角色及其职责如下：\n{roles}\n\n请仔细阅读下面的对话历史，以理解当前的工作流状态和最近一次采取的行动：\n{history}\n\n根据已定义的工作流步骤和对话历史，确定下一个应该采取行动的Agent。工作流的转换非常关键：\n1. 流程始于用户提供初始Prompt。第一个行动的Agent应该是Prompt优化Agent来处理它。\n2. 当 `Prompt优化Agent` 完成对其当前处理的Prompt（无论是初始Prompt还是优化后的版本）的准备工作后，下一步的Agent选择如下：\n    *   **情况一：`Prompt优化Agent` 认为当前Prompt已足够详细，适合交由用户评审。**\n        *   此时，应选择 `Prompt优化Agent` 作为下一个行动的Agent。其任务是向用户展示此Prompt，并引导评审过程，收集反馈。\n    *   **情况二：`Prompt优化Agent` 认为当前Prompt尚未足够详细（例如，直接执行可能有助于暴露问题并启发优化方向）。**\n        *   此时，应选择 `执行Agent` 作为下一个行动的Agent。\n3. 在执行Agent提供执行结果后，用户将进行评估。\n4. 如果用户提供的反馈表明对 *执行结果* 不满意，下一个行动的Agent应该是Prompt优化Agent，以便分析反馈并提议修改Prompt。\n5. 如果Prompt优化Agent提议修改 *Prompt文本*，用户将评审它。\n6. 如果用户提供关于 *Prompt文本本身* 的反馈或要求修改（在确认之前），下一个Agent应该是Prompt优化Agent来进行文本调整。\n7. 如果用户 *明确确认* 提议的 *Prompt文本* 令人满意，下一个行动的Agent应该是执行Agent，使用批准的Prompt重新执行。\n8. 执行 -> 用户结果反馈 -> Prompt优化Agent文本修改 -> 用户文本反馈/确认 -> 执行Agent的循环会持续进行，直到用户对最终的执行结果表示满意为止。\n9. 如果用户对最终执行结果表示满意，则表示优化循环完成，不应选择任何Agent继续此优化流程，需要使用文件系统Agent来保存优化后的Prompt。\n\n请从可用参与者列表 ({participants}) 中选择下一个要扮演的角色。*仅*返回所选角色的确切名称。不包含任何其他文本、解释或标点符号。",
        "allow_repeated_speaker": false,
        "max_selector_attempts": 3
    }
}